# .github/workflows/build.yml

name: Build Kivy APK with Buildozer

on:
  push:
    branches: [ "main" ] # Runs on push to the main branch
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab

jobs:
  build-android:
    runs-on: ubuntu-latest # Use a Linux runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Decode Keystore
        env:
          KEYSTORE_B64: ${{ secrets.KEYSTORE_B64 }}
        run: |
          echo $KEYSTORE_B64 | base64 --decode > my-release-key.keystore

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install buildozer cython==0.29.34 # Pin Cython for stability
          sudo apt-get update
          sudo apt-get install -y git zip unzip openjdk-17-jdk python3-pip autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 cmake libffi-dev libssl-dev

      - name: Set up buildozer environment variables
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS_PASSWORD: ${{ secrets.KEY_ALIAS_PASSWORD }}
        run: |
          echo "BUILDOZER_RELEASE_SIGNING_KEYSTORE_FILE=$(pwd)/my-release-key.keystore" >> $GITHUB_ENV
          echo "BUILDOZER_RELEASE_SIGNING_KEYSTORE_PASSWORD=${KEYSTORE_PASSWORD}" >> $GITHUB_ENV
          echo "BUILDOZER_RELEASE_SIGNING_KEY_ALIAS=mykeyalias" >> $GITHUB_ENV
          echo "BUILDOZER_RELEASE_SIGNING_KEY_PASSWORD=${KEY_ALIAS_PASSWORD}" >> $GITHUB_ENV
          
      - name: Build with Buildozer
        run: |
          buildozer -v android release

      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: study-planner-apk
          path: bin/*.apk
